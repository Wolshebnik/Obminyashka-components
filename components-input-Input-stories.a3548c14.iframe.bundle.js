"use strict";(self.webpackChunkobminyashka_components=self.webpackChunkobminyashka_components||[]).push([[677],{"./src/components/input/Input.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Error:()=>Error,Password:()=>Password,Phone:()=>Phone,Search:()=>Search,Text:()=>Text,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Input_stories,textArea:()=>textArea});var _Text$parameters,_Text$parameters2,_Text$parameters2$doc,_textArea$parameters,_textArea$parameters2,_textArea$parameters3,_Password$parameters,_Password$parameters2,_Password$parameters3,_Phone$parameters,_Phone$parameters2,_Phone$parameters2$do,_Error$parameters,_Error$parameters2,_Error$parameters2$do,_Search$parameters,_Search$parameters2,_Search$parameters2$d,objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=__webpack_require__("./node_modules/react/index.js"),input=__webpack_require__("./src/components/input/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Input_stories={title:"Input",component:input.I,argTypes:{id:{name:"id",type:{name:"string"},description:"HTML attribute for input in this component",table:{type:{summary:"string"}},controls:"string"},error:{name:"Error",type:{name:"string"},description:"This component property accepts a description of the input processing error and outputs below the input itself",table:{type:{summary:"string"}},control:{type:"text"}},inputGap:{name:"InputGap",type:{name:"string"},description:'CSS property, sets the distance between the label and the wrapper containing input and error.\n\n Examples : "20px"(em,rem) or "10px 5px"(em,rem)',table:{type:{summary:"string"}},control:{type:"text"}},errorGap:{name:"errorGap",type:{name:"string"},description:'CSS property, sets the gap between error message and input.\n\n \n\nExamples : "20px"(em,rem) or "10px 5px"(em,rem)',table:{type:{summary:"string"}},control:{type:"text"}},type:{name:"Type",type:{name:"string"},description:'HTML attribute. This component handles several types of this attribute ("text", "password", "tel", "search").\n\n"text" - you can enter all characters, letters and numbers, the content of the input is visible and not validated. \n\n"password" - hides the entered data, replacing them with `****`. It also adds an icon to the right that disables/enables this feature \n\n"tel" - the input data is visible, but validation is present, only numbers can be entered, the content will be in the format "+38 (NNN) NNN-NN-NN"\n\n***N - the number you entered',table:{type:{summary:"string"},defaultValue:{summary:"text"}},control:"radio",options:["text","password","tel","search"]},name:{name:"Name",type:{name:"string",required:!0},description:"HTML input attribute that is assigned to an input in a component",table:{type:{summary:"string"},defaultValue:{summary:"inputName"}},controls:"string"},label:{name:"Label",type:{name:"string"},description:"The content of the label with the description of the input element.",table:{type:{summary:"string"}},controls:"string"},inputFlexDirection:{name:"InputFlexDirection",type:{name:"string"},description:'CSS property.\nSpecifies the position of the input label.\n\n\n"column" - top label, \n\n"row-reverse" - right label,\n\n"column-reverse" - bottom label,\n\n "row" - left label. \n\nIf props is not specified location matches column',table:{type:{summary:"string"}},control:"radio",options:["column","row","column-reverse","row-revers"]},placeholder:{name:"Placeholder",type:{name:"string"},description:"Value for  attribute placeholder of HTML input",table:{type:{summary:"string"}},control:"text"},labelColor:{name:"LabelColor",type:{name:"string"},description:"CSS property.\n\n Sets color text of label.",table:{type:{summary:"string"}},control:"color"},labelFontSize:{name:"LabelFontSize",type:{name:"string"},description:'CSS property.\n\n Sets size text of label.\n\nWritten in a\n      string type to define units of measure. Example : "10px (rem,em)"',table:{type:{summary:"string"}}},errorFontSize:{name:"ErrorFontSize",type:{name:"string"},description:'CSS property.\n\n Sets size text of error.\n\nWritten in a\n      string type to define units of measure. Example : "10px (rem,em)"',table:{type:{summary:"string"}}},labelFontWeight:{name:"LabelFontWeight",type:{name:"number"},description:"CSS property.\n\n Sets font weight of label.\n\nWritten as\n      number type. Example : 400",table:{type:{summary:"number"}},controls:"number"},inputMaxWidth:{name:"InputMaxWidth",type:{name:"string"},description:'CSS property. max-width\n\n Sets the maximum wrap width of\n    this component.\n\n Written in a string type to define units of measure.\n    If the property is not set, the behavior is as if width is 100%, since\n    this is a block-level element.\n\n Example : "600px(rem,em)" or "50%".',table:{type:{summary:"string"}},controls:"string"},autoComplete:{name:"autoComplete",type:{name:"string"},description:"HTML attribute of input.\n\n",table:{type:{summary:"string"},defaultValue:{summary:"on"}},control:"radio",options:["on","off"]},inputHeight:{name:"InputHeight",type:{name:"string"},description:"CSS property. Height\n\n Sets the height  of\n    input.\n\n Written in a string type to define units of measure.",table:{type:{summary:"string"},defaultValue:{summary:"40px"}},controls:"string"},inputJustifyContent:{name:"InputJustifyContent",type:{name:"string"},description:"CSS property. justify-content\n\n Aligns the Label and Input\n    elements with Error along the main axis. \n\n !!! With inputFlexDirection\n    property without value or with values 'column', 'column-reverse' will\n    not work.B ",table:{type:{summary:"string"}},control:"radio",options:["center","space-between","space-around","space-evenly"]},wrapperInputErrorWidth:{name:"WrapperInputErrorWidth",type:{name:"string"},description:'CSS property. Width\n\n Sets wrap width of\n    Input with Error message.\n\n Written in a string type to define units\n    of measure.\n\n Example : "600px(rem,em)" or "50%"',table:{type:{summary:"string"}},controls:"string"},value:{name:"Value",type:{name:"string"},description:"Input element content",table:{type:{summary:"string"}},controls:"string"},onClick:{name:"onClick",type:{name:"function"},description:"The function to be passed to the search icon.\n\n!!!\n    Available only for Search type",table:{type:{summary:"function"}}}}};var Template=function Template(args){var _useState=(0,react.useState)(""),_useState2=(0,slicedToArray.Z)(_useState,2),value=_useState2[0],setValue=_useState2[1];return(0,jsx_runtime.jsx)(input.I,(0,objectSpread2.Z)((0,objectSpread2.Z)({},args),{},{value,onChange:function onChange(e){return setValue("string"==typeof e?e:e.target.value)}}))},Text={args:{value:"",type:"text",inputHeight:"",error:void 0,name:"inputName",autoComplete:"on",inputGap:void 0,label:"Label text",placeholder:"Placeholder",inputFlexDirection:void 0},render:function render(args){return(0,jsx_runtime.jsx)(Template,(0,objectSpread2.Z)({},args))}},textArea={args:{value:"",error:"",inputGap:"26px",type:"textarea",name:"textarea",placeholder:"Placeholder",label:"Опишіть Вашу річ: деффекти, особливості використання, тощо"},render:function render(args){return(0,jsx_runtime.jsx)(Template,(0,objectSpread2.Z)({},args))}},Password={args:{value:"",error:"",inputGap:"26px",type:"password",name:"inputName",autoComplete:"off",inputHeight:"50px",inputFlexDirection:"",placeholder:"Placeholder",label:"Введіть Ваш пароль"},render:function render(args){return(0,jsx_runtime.jsx)(Template,(0,objectSpread2.Z)({},args))}},Phone={args:{value:"",error:"",type:"tel",name:"Name",inputGap:"",inputHeight:"",label:"Телефон:",autoComplete:"on",labelColor:"black",inputMaxWidth:"588px",inputFlexDirection:"row",wrapperInputErrorWidth:"415px",placeholder:"+380(99)999-99-99",inputJustifyContent:"space-between"},render:function render(args){return(0,jsx_runtime.jsx)(Template,(0,objectSpread2.Z)({},args))}},Error={args:{value:"",type:"text",inputGap:"",error:"Error",errorGap:"5px",inputHeight:"",name:"inputName",autoComplete:"on",label:"Label text",errorFontSize:"16px",inputFlexDirection:"",placeholder:"Placeholder"},render:function render(args){return(0,jsx_runtime.jsx)(Template,(0,objectSpread2.Z)({},args))}},Search={args:{value:"",type:"search",name:"inputName",autoComplete:"on",inputHeight:"50px",placeholder:"Я шукаю..."},render:function render(args){return(0,jsx_runtime.jsx)(Template,(0,objectSpread2.Z)({},args))}};Text.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Text.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Text$parameters=Text.parameters)||void 0===_Text$parameters?void 0:_Text$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  args: {\n    value: '',\n    type: 'text',\n    inputHeight: '',\n    error: undefined,\n    name: 'inputName',\n    autoComplete: 'on',\n    inputGap: undefined,\n    label: 'Label text',\n    placeholder: 'Placeholder',\n    inputFlexDirection: undefined\n  },\n  render: args => <Template {...args} />\n}"},null===(_Text$parameters2=Text.parameters)||void 0===_Text$parameters2||null===(_Text$parameters2$doc=_Text$parameters2.docs)||void 0===_Text$parameters2$doc?void 0:_Text$parameters2$doc.source)})}),textArea.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},textArea.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_textArea$parameters=textArea.parameters)||void 0===_textArea$parameters?void 0:_textArea$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  args: {\n    value: '',\n    error: '',\n    inputGap: '26px',\n    type: 'textarea',\n    name: 'textarea',\n    placeholder: 'Placeholder',\n    label: 'Опишіть Вашу річ: деффекти, особливості використання, тощо'\n  },\n  render: args => <Template {...args} />\n}"},null===(_textArea$parameters2=textArea.parameters)||void 0===_textArea$parameters2||null===(_textArea$parameters3=_textArea$parameters2.docs)||void 0===_textArea$parameters3?void 0:_textArea$parameters3.source)})}),Password.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Password.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Password$parameters=Password.parameters)||void 0===_Password$parameters?void 0:_Password$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  args: {\n    value: '',\n    error: '',\n    inputGap: '26px',\n    type: 'password',\n    name: 'inputName',\n    autoComplete: 'off',\n    inputHeight: '50px',\n    inputFlexDirection: '',\n    placeholder: 'Placeholder',\n    label: 'Введіть Ваш пароль'\n  },\n  render: args => <Template {...args} />\n}"},null===(_Password$parameters2=Password.parameters)||void 0===_Password$parameters2||null===(_Password$parameters3=_Password$parameters2.docs)||void 0===_Password$parameters3?void 0:_Password$parameters3.source)})}),Phone.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Phone.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Phone$parameters=Phone.parameters)||void 0===_Phone$parameters?void 0:_Phone$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  args: {\n    value: '',\n    error: '',\n    type: 'tel',\n    name: 'Name',\n    inputGap: '',\n    inputHeight: '',\n    label: 'Телефон:',\n    autoComplete: 'on',\n    labelColor: 'black',\n    inputMaxWidth: '588px',\n    inputFlexDirection: 'row',\n    wrapperInputErrorWidth: '415px',\n    placeholder: '+380(99)999-99-99',\n    inputJustifyContent: 'space-between'\n  },\n  render: args => <Template {...args} />\n}"},null===(_Phone$parameters2=Phone.parameters)||void 0===_Phone$parameters2||null===(_Phone$parameters2$do=_Phone$parameters2.docs)||void 0===_Phone$parameters2$do?void 0:_Phone$parameters2$do.source)})}),Error.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Error.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Error$parameters=Error.parameters)||void 0===_Error$parameters?void 0:_Error$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  args: {\n    value: '',\n    type: 'text',\n    inputGap: '',\n    error: 'Error',\n    errorGap: '5px',\n    inputHeight: '',\n    name: 'inputName',\n    autoComplete: 'on',\n    label: 'Label text',\n    errorFontSize: '16px',\n    inputFlexDirection: '',\n    placeholder: 'Placeholder'\n  },\n  render: args => <Template {...args} />\n}"},null===(_Error$parameters2=Error.parameters)||void 0===_Error$parameters2||null===(_Error$parameters2$do=_Error$parameters2.docs)||void 0===_Error$parameters2$do?void 0:_Error$parameters2$do.source)})}),Search.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Search.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Search$parameters=Search.parameters)||void 0===_Search$parameters?void 0:_Search$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  args: {\n    value: '',\n    type: 'search',\n    name: 'inputName',\n    autoComplete: 'on',\n    inputHeight: '50px',\n    placeholder: 'Я шукаю...'\n  },\n  render: args => <Template {...args} />\n}"},null===(_Search$parameters2=Search.parameters)||void 0===_Search$parameters2||null===(_Search$parameters2$d=_Search$parameters2.docs)||void 0===_Search$parameters2$d?void 0:_Search$parameters2$d.source)})});var __namedExportsOrder=["Text","textArea","Password","Phone","Error","Search"]}}]);