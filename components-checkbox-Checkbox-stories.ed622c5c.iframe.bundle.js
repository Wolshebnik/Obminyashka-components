"use strict";(self.webpackChunkobminyashka_components=self.webpackChunkobminyashka_components||[]).push([[511],{"./src/components/checkbox/Checkbox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checkbox:()=>Checkbox,RadioButton:()=>RadioButton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Checkbox_stories});var _Checkbox$parameters,_Checkbox$parameters2,_Checkbox$parameters3,_RadioButton$paramete,_RadioButton$paramete2,_RadioButton$paramete3,objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=__webpack_require__("./node_modules/react/index.js"),components_checkbox=__webpack_require__("./src/components/checkbox/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Checkbox_stories={title:"Checkbox",component:components_checkbox.J,argTypes:{name:{name:"name",type:{name:"string",required:!0},description:"Name of the input",control:{type:"string"}},onChange:{name:"onChange",type:{name:"function"},description:"Handler change",action:"change"},gap:{name:"gap",type:{name:"number"},description:"gap",table:{type:{summary:"number"},defaultValue:{summary:20}},control:{type:"number"}},fontSize:{name:"font-size",type:{name:"number"},description:"CSS font-size",table:{type:{summary:"number"},defaultValue:{summary:14}},control:{type:"number"}},text:{name:"text",type:{name:"string"},description:"text value of label",table:{defaultValue:{summary:"Checkbox"},type:{summary:"string"}}},type:{name:"type",type:{name:"string"},description:"type of input",table:{type:{summary:"string"},defaultValue:{summary:"checkbox"}},control:"select",options:["checkbox","radio"]}}};var Checkbox={args:{text:"Checkbox",name:"checkbox"},render:function render(args){var _useState=(0,react.useState)(!1),_useState2=(0,slicedToArray.Z)(_useState,2),checked=_useState2[0],setChecked=_useState2[1];return(0,jsx_runtime.jsx)(components_checkbox.J,(0,objectSpread2.Z)((0,objectSpread2.Z)({},args),{},{checked,onChange:function onChange(){return setChecked(!checked)}}))}},RadioButton=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Checkbox),{},{args:{gap:20,type:"radio",text:"Radio",name:"radio"}});Checkbox.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Checkbox.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Checkbox$parameters=Checkbox.parameters)||void 0===_Checkbox$parameters?void 0:_Checkbox$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  args: {\n    text: 'Checkbox',\n    name: 'checkbox'\n  },\n  render: args => {\n    const [checked, setChecked] = useState<boolean>(false);\n    return <CheckBox {...args} checked={checked} onChange={() => setChecked(!checked)} />;\n  }\n}"},null===(_Checkbox$parameters2=Checkbox.parameters)||void 0===_Checkbox$parameters2||null===(_Checkbox$parameters3=_Checkbox$parameters2.docs)||void 0===_Checkbox$parameters3?void 0:_Checkbox$parameters3.source)})}),RadioButton.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},RadioButton.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_RadioButton$paramete=RadioButton.parameters)||void 0===_RadioButton$paramete?void 0:_RadioButton$paramete.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  ...Checkbox,\n  args: {\n    gap: 20,\n    type: 'radio',\n    text: 'Radio',\n    name: 'radio'\n  }\n}"},null===(_RadioButton$paramete2=RadioButton.parameters)||void 0===_RadioButton$paramete2||null===(_RadioButton$paramete3=_RadioButton$paramete2.docs)||void 0===_RadioButton$paramete3?void 0:_RadioButton$paramete3.source)})});var __namedExportsOrder=["Checkbox","RadioButton"]}}]);